# Default values for chart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: mrphillc/rosterbater
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: latest

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: true
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: "letsencrypt-production"
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: rosterbater.com
      paths: ["/"]
    - host: www.rosterbater.com
      paths: ["/"]
  tls:
   - secretName: rosterbatercom-tls
     hosts:
       - rosterbater.com
       - www.rosterbater.com

resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  limits:
    cpu: 1
    memory: 512Mi
  requests:
    cpu: 0.5
    memory: 256Mi

nodeSelector: {}

tolerations: []

affinity: {}

postgresql:
  existingSecret: rosterbater-postgresql

tls:
  server: production
  # server: staging

dns:
  domain: rosterbater.com
